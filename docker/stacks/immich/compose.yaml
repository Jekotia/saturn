include:
  - ../../networks/proxy_private.yaml
#
# WARNING: To install Immich, follow our guide: https://immich.app/docs/install/docker-compose
#
# Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - server.data.upload.upload:/usr/src/app/upload/upload
      - server.data.upload.thumbs:/usr/src/app/upload/thumbs
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    # ports:
    #   - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    networks:
      - immich
      - proxy_private
    labels:
      # Glance
      glance.name: Immich
      glance.icon: sh:immich
      glance.url: https://${IMMICH_URL_PREFIX:-immich.}${NETWORK_DOMAIN}
      glance.description: Image library with phone sync
      glance.category: personal
      glance.id: immich
      # What's Up Docker
      wud.watch: true
      wud.watch.digest: false
      wud.display.icon: sh:immich
      wud.tag.include: ^v\d+\.\d+\.\d+$$
      # Traefik
      traefik.enable: "true"
      # Frontend => Router
      traefik.http.routers.immich.entrypoints: websecure
      traefik.http.routers.immich.rule: Host(`${IMMICH_URL_PREFIX:-immich.}${NETWORK_DOMAIN}`)
      traefik.http.routers.immich.tls.certresolver: dns-cloudflare
      # Frontend => Services
      traefik.http.routers.immich.service: immich
      traefik.http.services.immich.loadbalancer.server.port: 2283

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
    networks:
      - immich
    labels:
      # Glance
      glance.name: Machine Learning
      glance.parent: immich
      glance.category: personal
      # What's Up Docker
      wud.watch: true
      wud.watch.digest: false
      wud.display.icon: sh:immich
      wud.tag.include: ^v\d+\.\d+\.\d+$$

  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - immich
    labels:
      # Glance
      glance.name: Redis
      glance.parent: immich
      glance.category: personal
      # What's Up Docker
      wud.watch: true
      wud.watch.digest: false
      wud.display.icon: sh:redis
      wud.tag.include: ^\d+\.\d+-alpine$$

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: always
    networks:
      - immich
    labels:
      # Glance
      glance.name: PostgreSQL
      glance.parent: immich
      glance.category: personal
      # What's Up Docker
      wud.watch: true
      wud.watch.digest: false
      wud.display.icon: sh:postgresql
      wud.tag.include: ^pg14-v\d+\.\d+\.\d+$$
      # Traefik

volumes:
  model-cache:
  server.data.upload.thumbs:
    driver_opts:
      type: nfs
      o: addr=10.0.0.10,nolock,soft,rw
      device: :/mnt/storage/application_data/immich/server/upload/thumbs
  server.data.upload.upload:
    driver_opts:
      type: nfs
      o: addr=10.0.0.10,nolock,soft,rw
      device: :/mnt/storage/application_data/immich/server/upload/upload

networks:
  immich: