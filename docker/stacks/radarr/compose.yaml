include:
  - ../../networks/proxy_private.yaml
  - ../../volumes/smb-multimedia.yaml

services:
  radarr:
    image: ghcr.io/linuxserver/radarr:5.19.3.9730-ls261@sha256:0a8020afc5e3dcad1413ba125a980729a2b16ff0d88d108b3e1779111ef1c896
    container_name: radarr
    restart: unless-stopped
#    depends_on:
#      - prowlarr
    networks:
      - proxy_private
    volumes:
      - smb.multimedia:/multimedia
      - /srv/application_data/radarr/app/config:/config
      - radarr.data.mediacover:/config/MediaCover
      #- $USERDIR/docker/shared/mp4_automator:/config_mp4_automator
      - /srv/application_data/arr-discord-notifier/arr-discord-notifier.sh:/app/arr-discord-notifier.sh:ro
    environment:
      - DISCORD_WEBHOOK=${RADARR_DISCORD_WEBHOOK}
      - AUTHOR_NAME=Radarr
      - DROP_FIELDS="rating,genres,cast,links,backdrop,release,overview,codecs"
      - DOCKER_MODS=linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=grep
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    labels:
      diun.enable: "true"
      traefik.enable: "true"
      # Frontend => Router
      traefik.http.routers.radarr.entrypoints: websecure
      traefik.http.routers.radarr.rule: Host(`${RADARR_URL_PREFIX:-radarr.}${NETWORK_DOMAIN}`)
      traefik.http.routers.radarr.tls.certresolver: dns-cloudflare
      # Frontend => Services
      traefik.http.routers.radarr.service: radarr
      traefik.http.services.radarr.loadbalancer.server.port: 7878

volumes:
  radarr.data.mediacover:
    driver_opts:
      type: nfs
      o: addr=10.0.0.10,nolock,soft,rw
      device: :/mnt/storage/application_data/radarr/app/config/MediaCover
